{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\buskaromain1\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem(\"authToken\"));\n\n  // Set up axios interceptor for authentication\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n    } else {\n      delete axios.defaults.headers.common[\"Authorization\"];\n    }\n  }, [token]);\n\n  // Check if user is authenticated on app load\n  useEffect(() => {\n    const checkAuth = async () => {\n      const storedToken = localStorage.getItem(\"authToken\");\n      if (storedToken) {\n        try {\n          axios.defaults.headers.common[\"Authorization\"] = `Bearer ${storedToken}`;\n          const response = await axios.get(\"/api/profile\");\n          if (response.data.success) {\n            setUser(response.data.user);\n            setToken(storedToken);\n          } else {\n            // Token is invalid, remove it\n            localStorage.removeItem(\"authToken\");\n            delete axios.defaults.headers.common[\"Authorization\"];\n            setToken(null);\n          }\n        } catch (error) {\n          console.error(\"Auth check failed:\", error);\n          // Token is invalid, remove it\n          localStorage.removeItem(\"authToken\");\n          delete axios.defaults.headers.common[\"Authorization\"];\n          setToken(null);\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n  const login = async (userId, password) => {\n    try {\n      const response = await axios.post(\"/api/login\", {\n        userId,\n        password\n      });\n      if (response.data.success) {\n        const {\n          token: newToken,\n          user: userData\n        } = response.data;\n\n        // Store token and user data\n        localStorage.setItem(\"authToken\", newToken);\n        setToken(newToken);\n        setUser(userData);\n\n        // Set axios default header\n        axios.defaults.headers.common[\"Authorization\"] = `Bearer ${newToken}`;\n        return {\n          success: true\n        };\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Login error:\", error);\n      return {\n        success: false,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Login failed. Please try again.\"\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await axios.post(\"/api/register\", userData);\n      if (response.data.success) {\n        return {\n          success: true\n        };\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error(\"Registration error:\", error);\n      return {\n        success: false,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Registration failed. Please try again.\"\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      // Call logout endpoint if user is authenticated\n      if (token) {\n        await axios.post(\"/api/logout\");\n      }\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n    } finally {\n      // Clear local storage and state regardless of API call result\n      localStorage.removeItem(\"authToken\");\n      setToken(null);\n      setUser(null);\n      delete axios.defaults.headers.common[\"Authorization\"];\n    }\n  };\n  const updateProfile = async profileData => {\n    try {\n      const response = await axios.put(\"/api/profile\", profileData);\n      if (response.data.success) {\n        setUser(response.data.user);\n        return {\n          success: true\n        };\n      }\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error(\"Profile update error:\", error);\n      return {\n        success: false,\n        message: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"Profile update failed.\"\n      };\n    }\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    register,\n    logout,\n    updateProfile,\n    isAuthenticated: !!user && !!token\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"gcDH1eQVixtHIV/nvSb94DFr+DE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","context","Error","AuthProvider","children","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","defaults","headers","common","checkAuth","storedToken","response","get","data","success","removeItem","error","console","login","userId","password","post","newToken","userData","setItem","_error$response","_error$response$data","message","register","_error$response2","_error$response2$data","logout","updateProfile","profileData","put","_error$response3","_error$response3$data","value","isAuthenticated","Provider","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/buskaromain1/frontend/src/context/AuthContext.js"],"sourcesContent":["\"use client\"\n\nimport { createContext, useContext, useState, useEffect } from \"react\"\nimport axios from \"axios\"\n\nconst AuthContext = createContext()\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext)\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\")\n  }\n  return context\n}\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const [token, setToken] = useState(localStorage.getItem(\"authToken\"))\n\n  // Set up axios interceptor for authentication\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\n    } else {\n      delete axios.defaults.headers.common[\"Authorization\"]\n    }\n  }, [token])\n\n  // Check if user is authenticated on app load\n  useEffect(() => {\n    const checkAuth = async () => {\n      const storedToken = localStorage.getItem(\"authToken\")\n\n      if (storedToken) {\n        try {\n          axios.defaults.headers.common[\"Authorization\"] = `Bearer ${storedToken}`\n          const response = await axios.get(\"/api/profile\")\n\n          if (response.data.success) {\n            setUser(response.data.user)\n            setToken(storedToken)\n          } else {\n            // Token is invalid, remove it\n            localStorage.removeItem(\"authToken\")\n            delete axios.defaults.headers.common[\"Authorization\"]\n            setToken(null)\n          }\n        } catch (error) {\n          console.error(\"Auth check failed:\", error)\n          // Token is invalid, remove it\n          localStorage.removeItem(\"authToken\")\n          delete axios.defaults.headers.common[\"Authorization\"]\n          setToken(null)\n        }\n      }\n\n      setLoading(false)\n    }\n\n    checkAuth()\n  }, [])\n\n  const login = async (userId, password) => {\n    try {\n      const response = await axios.post(\"/api/login\", {\n        userId,\n        password,\n      })\n\n      if (response.data.success) {\n        const { token: newToken, user: userData } = response.data\n\n        // Store token and user data\n        localStorage.setItem(\"authToken\", newToken)\n        setToken(newToken)\n        setUser(userData)\n\n        // Set axios default header\n        axios.defaults.headers.common[\"Authorization\"] = `Bearer ${newToken}`\n\n        return { success: true }\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error)\n      return {\n        success: false,\n        message: error.response?.data?.message || \"Login failed. Please try again.\",\n      }\n    }\n  }\n\n  const register = async (userData) => {\n    try {\n      const response = await axios.post(\"/api/register\", userData)\n\n      if (response.data.success) {\n        return { success: true }\n      }\n    } catch (error) {\n      console.error(\"Registration error:\", error)\n      return {\n        success: false,\n        message: error.response?.data?.message || \"Registration failed. Please try again.\",\n      }\n    }\n  }\n\n  const logout = async () => {\n    try {\n      // Call logout endpoint if user is authenticated\n      if (token) {\n        await axios.post(\"/api/logout\")\n      }\n    } catch (error) {\n      console.error(\"Logout error:\", error)\n    } finally {\n      // Clear local storage and state regardless of API call result\n      localStorage.removeItem(\"authToken\")\n      setToken(null)\n      setUser(null)\n      delete axios.defaults.headers.common[\"Authorization\"]\n    }\n  }\n\n  const updateProfile = async (profileData) => {\n    try {\n      const response = await axios.put(\"/api/profile\", profileData)\n\n      if (response.data.success) {\n        setUser(response.data.user)\n        return { success: true }\n      }\n    } catch (error) {\n      console.error(\"Profile update error:\", error)\n      return {\n        success: false,\n        message: error.response?.data?.message || \"Profile update failed.\",\n      }\n    }\n  }\n\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    register,\n    logout,\n    updateProfile,\n    isAuthenticated: !!user && !!token,\n  }\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}