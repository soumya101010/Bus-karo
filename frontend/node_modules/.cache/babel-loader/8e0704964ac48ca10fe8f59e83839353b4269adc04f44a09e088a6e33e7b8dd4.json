{"ast":null,"code":"\"use client\";\n\n// src/components/AdminDashboard.js - Complete solution with bus selection\nvar _jsxFileName = \"D:\\\\buskaromain1\\\\frontend\\\\src\\\\components\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nimport socket from \"../socket\";\nimport { Chart } from \"chart.js/auto\";\nimport \"./AdminDashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminDashboard() {\n  _s();\n  const [buses, setBuses] = useState({});\n  const [isConnected, setIsConnected] = useState(false);\n  const chartRef = useRef(null);\n  const myChartRef = useRef(null);\n  const timeLabels = useRef([]);\n  const datasetsRef = useRef({});\n  const [totalArea, setTotalArea] = useState(0);\n  const updateChart = data => {\n    if (!chartRef.current) {\n      console.log(\"Chart canvas not available yet\");\n      return;\n    }\n    const ctx = chartRef.current.getContext(\"2d\");\n\n    // Initialize chart if it doesn't exist\n    if (!myChartRef.current) {\n      console.log(\"Creating new chart instance\");\n      myChartRef.current = new Chart(ctx, {\n        type: \"line\",\n        data: {\n          labels: [],\n          datasets: []\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          animation: {\n            duration: 300\n          },\n          plugins: {\n            legend: {\n              position: \"top\",\n              labels: {\n                color: \"#64748b\",\n                font: {\n                  size: 12\n                },\n                usePointStyle: true,\n                padding: 20\n              }\n            },\n            tooltip: {\n              mode: \"index\",\n              intersect: false,\n              backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n              titleColor: \"#fff\",\n              bodyColor: \"#fff\",\n              borderColor: \"rgba(255, 255, 255, 0.1)\",\n              borderWidth: 1\n            }\n          },\n          scales: {\n            y: {\n              beginAtZero: true,\n              grid: {\n                color: \"rgba(0, 0, 0, 0.05)\"\n              },\n              ticks: {\n                color: \"#64748b\",\n                callback: value => value + \" km\"\n              }\n            },\n            x: {\n              grid: {\n                display: false\n              },\n              ticks: {\n                color: \"#64748b\",\n                maxRotation: 0,\n                font: {\n                  size: 10\n                }\n              }\n            }\n          },\n          elements: {\n            line: {\n              tension: 0.4\n            },\n            point: {\n              radius: 0,\n              hoverRadius: 4\n            }\n          },\n          interaction: {\n            mode: \"index\",\n            intersect: false\n          }\n        }\n      });\n    }\n    const chart = myChartRef.current;\n    const now = new Date().toLocaleTimeString([], {\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\"\n    });\n\n    // Update time labels\n    timeLabels.current.push(now);\n    if (timeLabels.current.length > 15) timeLabels.current.shift();\n    chart.data.labels = [...timeLabels.current];\n\n    // Update datasets for each bus (distance vs time)\n    Object.values(data).forEach(bus => {\n      const busName = bus.name || `Bus ${bus.id}`;\n      if (!datasetsRef.current[bus.id]) {\n        console.log(\"Adding new dataset for bus:\", busName);\n        const color = getColorForBus(bus.id);\n        datasetsRef.current[bus.id] = {\n          label: busName,\n          data: [],\n          borderColor: color,\n          backgroundColor: color + \"20\",\n          borderWidth: 2,\n          fill: false,\n          tension: 0.4,\n          pointBackgroundColor: color,\n          pointBorderColor: \"#fff\",\n          pointHoverBackgroundColor: color,\n          pointHoverBorderColor: \"#fff\",\n          pointHoverRadius: 5\n        };\n        chart.data.datasets.push(datasetsRef.current[bus.id]);\n      }\n      const dataset = datasetsRef.current[bus.id];\n      const distance = bus.distance || 0;\n      dataset.data.push(distance);\n\n      // Keep only last 15 data points\n      if (dataset.data.length > 15) dataset.data.shift();\n    });\n\n    // Remove datasets for buses that are no longer present\n    const currentBusIds = Object.values(data).map(bus => bus.id);\n    Object.keys(datasetsRef.current).forEach(busId => {\n      if (!currentBusIds.includes(Number.parseInt(busId))) {\n        delete datasetsRef.current[busId];\n      }\n    });\n    chart.data.datasets = chart.data.datasets.filter(dataset => {\n      const busId = Object.keys(datasetsRef.current).find(id => datasetsRef.current[id] === dataset);\n      return busId !== undefined;\n    });\n    chart.update(\"none\");\n  };\n  const getColorForBus = busId => {\n    const colors = [\"#2563eb\", \"#dc2626\", \"#16a34a\", \"#9333ea\", \"#ea580c\", \"#0891b2\", \"#ca8a04\", \"#db2777\", \"#65a30d\", \"#7c3aed\"];\n    return colors[busId % colors.length];\n  };\n  const calculateTotalArea = busData => {\n    let totalCoverage = 0;\n    const busCount = Object.keys(busData).length;\n    Object.values(busData).forEach(bus => {\n      const distance = bus.distance || 0;\n      const baseCoverage = distance * 2.5;\n      const busMultiplier = 1 + busCount * 0.1;\n      const nonLinearGrowth = Math.sqrt(distance) * 15;\n      const busCoverage = (baseCoverage + nonLinearGrowth) * busMultiplier;\n      totalCoverage += busCoverage;\n    });\n    const urbanBase = 150;\n    totalCoverage += urbanBase;\n    setTotalArea(totalCoverage);\n    return totalCoverage;\n  };\n  const handleBusClick = busId => {\n    console.log(\"Bus clicked:\", busId);\n    socket.emit(\"selectBus\", busId);\n  };\n  useEffect(() => {\n    console.log(\"AdminDashboard: Setting up socket connection...\");\n    socket.on(\"connect\", () => {\n      console.log(\"Connected to server from AdminDashboard\");\n      setIsConnected(true);\n    });\n    socket.on(\"disconnect\", () => {\n      console.log(\"Disconnected from server\");\n      setIsConnected(false);\n    });\n    socket.on(\"busUpdate\", data => {\n      console.log(\"Received bus update:\", Object.keys(data).length, \"buses\");\n      setBuses(data);\n      calculateTotalArea(data);\n      updateChart(data);\n    });\n    socket.emit(\"getBuses\");\n    return () => {\n      console.log(\"AdminDashboard: Cleaning up socket connection\");\n      socket.off(\"connect\");\n      socket.off(\"disconnect\");\n      socket.off(\"busUpdate\");\n    };\n  }, []); // Removed updateChart from dependency array to fix ESLint warning\n\n  const totalPassengers = Object.values(buses).reduce((sum, bus) => sum + (bus.passengers || 0), 0);\n  const activeBuses = Object.values(buses).filter(bus => bus.status !== \"stopped\").length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"dashboard-header\",\n        children: \"Dashboard Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `connection-status ${isConnected ? \"connected\" : \"disconnected\"}`,\n        children: isConnected ? \"LIVE\" : \"OFFLINE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-icon\",\n          children: \"\\uD83D\\uDE8C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Buses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"stat-number\",\n          children: Object.keys(buses).length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-icon\",\n          children: \"\\u26A1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Active Buses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"stat-number\",\n          children: activeBuses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-icon\",\n          children: \"\\uD83D\\uDC65\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Passengers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"stat-number\",\n          children: totalPassengers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-icon\",\n          children: \"\\uD83D\\uDDFA\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Area Coverage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"stat-number\",\n          children: [totalArea.toFixed(1), \" km\\xB2\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDE8C Live Bus Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"dashboard-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Bus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Speed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Distance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Passengers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Next Stop\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Object.keys(buses).length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"6\",\n                className: \"loading-cell\",\n                children: isConnected ? \"Waiting for bus data...\" : \"Connecting to server...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this) : Object.keys(buses).map(busId => {\n              const bus = buses[busId];\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                onClick: () => handleBusClick(busId),\n                className: \"clickable-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bus-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"bus-color-indicator\",\n                      style: {\n                        backgroundColor: bus.color || getColorForBus(bus.id)\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 301,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"color-bullet\",\n                      children: bus.colorBullet || \"🚌\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 305,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"bus-name\",\n                      children: bus.name || `Bus ${bus.id}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"speed-cell\",\n                  children: [bus.speed || 0, \" km/h\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"distance-cell\",\n                  children: [(bus.distance || 0).toFixed(1), \" km\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `status ${bus.status || \"unknown\"}`,\n                    children: bus.status || \"unknown\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"passenger-cell\",\n                  children: [bus.passengers || 0, /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"capacity\",\n                    children: [\"/\", bus.capacity || 50]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"next-stop-cell\",\n                  children: bus.distanceToNextStop ? bus.distanceToNextStop < 1000 ? `${bus.distanceToNextStop}m` : `${(bus.distanceToNextStop / 1000).toFixed(1)}km` : \"N/A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 23\n                }, this)]\n              }, busId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCC8 Live Distance Tracking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chart-info\",\n          children: [timeLabels.current.length, \" data points\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: chartRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminDashboard, \"z0s7Ug3SQxwLqToJSwUqYfTnxYU=\");\n_c = AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useEffect","useState","useRef","socket","Chart","jsxDEV","_jsxDEV","AdminDashboard","buses","setBuses","isConnected","setIsConnected","chartRef","myChartRef","timeLabels","datasetsRef","totalArea","setTotalArea","updateChart","data","current","console","log","ctx","getContext","type","labels","datasets","options","responsive","maintainAspectRatio","animation","duration","plugins","legend","position","color","font","size","usePointStyle","padding","tooltip","mode","intersect","backgroundColor","titleColor","bodyColor","borderColor","borderWidth","scales","y","beginAtZero","grid","ticks","callback","value","x","display","maxRotation","elements","line","tension","point","radius","hoverRadius","interaction","chart","now","Date","toLocaleTimeString","hour","minute","second","push","length","shift","Object","values","forEach","bus","busName","name","id","getColorForBus","label","fill","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverRadius","dataset","distance","currentBusIds","map","keys","busId","includes","Number","parseInt","filter","find","undefined","update","colors","calculateTotalArea","busData","totalCoverage","busCount","baseCoverage","busMultiplier","nonLinearGrowth","Math","sqrt","busCoverage","urbanBase","handleBusClick","emit","on","off","totalPassengers","reduce","sum","passengers","activeBuses","status","className","children","fileName","lineNumber","columnNumber","toFixed","colSpan","onClick","style","colorBullet","speed","capacity","distanceToNextStop","ref","_c","$RefreshReg$"],"sources":["D:/buskaromain1/frontend/src/components/AdminDashboard.js"],"sourcesContent":["\"use client\"\n\n// src/components/AdminDashboard.js - Complete solution with bus selection\nimport { useEffect, useState, useRef } from \"react\"\nimport socket from \"../socket\"\nimport { Chart } from \"chart.js/auto\"\nimport \"./AdminDashboard.css\"\n\nexport default function AdminDashboard() {\n  const [buses, setBuses] = useState({})\n  const [isConnected, setIsConnected] = useState(false)\n  const chartRef = useRef(null)\n  const myChartRef = useRef(null)\n  const timeLabels = useRef([])\n  const datasetsRef = useRef({})\n  const [totalArea, setTotalArea] = useState(0)\n\n  const updateChart = (data) => {\n    if (!chartRef.current) {\n      console.log(\"Chart canvas not available yet\")\n      return\n    }\n\n    const ctx = chartRef.current.getContext(\"2d\")\n\n    // Initialize chart if it doesn't exist\n    if (!myChartRef.current) {\n      console.log(\"Creating new chart instance\")\n      myChartRef.current = new Chart(ctx, {\n        type: \"line\",\n        data: {\n          labels: [],\n          datasets: [],\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          animation: {\n            duration: 300,\n          },\n          plugins: {\n            legend: {\n              position: \"top\",\n              labels: {\n                color: \"#64748b\",\n                font: {\n                  size: 12,\n                },\n                usePointStyle: true,\n                padding: 20,\n              },\n            },\n            tooltip: {\n              mode: \"index\",\n              intersect: false,\n              backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n              titleColor: \"#fff\",\n              bodyColor: \"#fff\",\n              borderColor: \"rgba(255, 255, 255, 0.1)\",\n              borderWidth: 1,\n            },\n          },\n          scales: {\n            y: {\n              beginAtZero: true,\n              grid: {\n                color: \"rgba(0, 0, 0, 0.05)\",\n              },\n              ticks: {\n                color: \"#64748b\",\n                callback: (value) => value + \" km\",\n              },\n            },\n            x: {\n              grid: {\n                display: false,\n              },\n              ticks: {\n                color: \"#64748b\",\n                maxRotation: 0,\n                font: {\n                  size: 10,\n                },\n              },\n            },\n          },\n          elements: {\n            line: {\n              tension: 0.4,\n            },\n            point: {\n              radius: 0,\n              hoverRadius: 4,\n            },\n          },\n          interaction: {\n            mode: \"index\",\n            intersect: false,\n          },\n        },\n      })\n    }\n\n    const chart = myChartRef.current\n    const now = new Date().toLocaleTimeString([], {\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\",\n    })\n\n    // Update time labels\n    timeLabels.current.push(now)\n    if (timeLabels.current.length > 15) timeLabels.current.shift()\n    chart.data.labels = [...timeLabels.current]\n\n    // Update datasets for each bus (distance vs time)\n    Object.values(data).forEach((bus) => {\n      const busName = bus.name || `Bus ${bus.id}`\n\n      if (!datasetsRef.current[bus.id]) {\n        console.log(\"Adding new dataset for bus:\", busName)\n        const color = getColorForBus(bus.id)\n\n        datasetsRef.current[bus.id] = {\n          label: busName,\n          data: [],\n          borderColor: color,\n          backgroundColor: color + \"20\",\n          borderWidth: 2,\n          fill: false,\n          tension: 0.4,\n          pointBackgroundColor: color,\n          pointBorderColor: \"#fff\",\n          pointHoverBackgroundColor: color,\n          pointHoverBorderColor: \"#fff\",\n          pointHoverRadius: 5,\n        }\n        chart.data.datasets.push(datasetsRef.current[bus.id])\n      }\n\n      const dataset = datasetsRef.current[bus.id]\n      const distance = bus.distance || 0\n      dataset.data.push(distance)\n\n      // Keep only last 15 data points\n      if (dataset.data.length > 15) dataset.data.shift()\n    })\n\n    // Remove datasets for buses that are no longer present\n    const currentBusIds = Object.values(data).map((bus) => bus.id)\n    Object.keys(datasetsRef.current).forEach((busId) => {\n      if (!currentBusIds.includes(Number.parseInt(busId))) {\n        delete datasetsRef.current[busId]\n      }\n    })\n\n    chart.data.datasets = chart.data.datasets.filter((dataset) => {\n      const busId = Object.keys(datasetsRef.current).find((id) => datasetsRef.current[id] === dataset)\n      return busId !== undefined\n    })\n\n    chart.update(\"none\")\n  }\n\n  const getColorForBus = (busId) => {\n    const colors = [\n      \"#2563eb\",\n      \"#dc2626\",\n      \"#16a34a\",\n      \"#9333ea\",\n      \"#ea580c\",\n      \"#0891b2\",\n      \"#ca8a04\",\n      \"#db2777\",\n      \"#65a30d\",\n      \"#7c3aed\",\n    ]\n    return colors[busId % colors.length]\n  }\n\n  const calculateTotalArea = (busData) => {\n    let totalCoverage = 0\n    const busCount = Object.keys(busData).length\n\n    Object.values(busData).forEach((bus) => {\n      const distance = bus.distance || 0\n      const baseCoverage = distance * 2.5\n      const busMultiplier = 1 + busCount * 0.1\n      const nonLinearGrowth = Math.sqrt(distance) * 15\n      const busCoverage = (baseCoverage + nonLinearGrowth) * busMultiplier\n      totalCoverage += busCoverage\n    })\n\n    const urbanBase = 150\n    totalCoverage += urbanBase\n\n    setTotalArea(totalCoverage)\n    return totalCoverage\n  }\n\n  const handleBusClick = (busId) => {\n    console.log(\"Bus clicked:\", busId)\n    socket.emit(\"selectBus\", busId)\n  }\n\n  useEffect(() => {\n    console.log(\"AdminDashboard: Setting up socket connection...\")\n\n    socket.on(\"connect\", () => {\n      console.log(\"Connected to server from AdminDashboard\")\n      setIsConnected(true)\n    })\n\n    socket.on(\"disconnect\", () => {\n      console.log(\"Disconnected from server\")\n      setIsConnected(false)\n    })\n\n    socket.on(\"busUpdate\", (data) => {\n      console.log(\"Received bus update:\", Object.keys(data).length, \"buses\")\n      setBuses(data)\n      calculateTotalArea(data)\n      updateChart(data)\n    })\n\n    socket.emit(\"getBuses\")\n\n    return () => {\n      console.log(\"AdminDashboard: Cleaning up socket connection\")\n      socket.off(\"connect\")\n      socket.off(\"disconnect\")\n      socket.off(\"busUpdate\")\n    }\n  }, []) // Removed updateChart from dependency array to fix ESLint warning\n\n  const totalPassengers = Object.values(buses).reduce((sum, bus) => sum + (bus.passengers || 0), 0)\n  const activeBuses = Object.values(buses).filter((bus) => bus.status !== \"stopped\").length\n\n  return (\n    <div className=\"dashboard-container\">\n      <div className=\"dashboard-header-container\">\n        <h2 className=\"dashboard-header\">Dashboard Overview</h2>\n        <div className={`connection-status ${isConnected ? \"connected\" : \"disconnected\"}`}>\n          {isConnected ? \"LIVE\" : \"OFFLINE\"}\n        </div>\n      </div>\n\n      {/* Stats Overview */}\n      <div className=\"stats-grid\">\n        <div className=\"stat-card\">\n          <div className=\"stat-icon\">🚌</div>\n          <h3>Total Buses</h3>\n          <p className=\"stat-number\">{Object.keys(buses).length}</p>\n        </div>\n        <div className=\"stat-card\">\n          <div className=\"stat-icon\">⚡</div>\n          <h3>Active Buses</h3>\n          <p className=\"stat-number\">{activeBuses}</p>\n        </div>\n        <div className=\"stat-card\">\n          <div className=\"stat-icon\">👥</div>\n          <h3>Total Passengers</h3>\n          <p className=\"stat-number\">{totalPassengers}</p>\n        </div>\n        <div className=\"stat-card\">\n          <div className=\"stat-icon\">🗺️</div>\n          <h3>Area Coverage</h3>\n          <p className=\"stat-number\">{totalArea.toFixed(1)} km²</p>\n        </div>\n      </div>\n\n      {/* Table */}\n      <div className=\"card\">\n        <h3>🚌 Live Bus Data</h3>\n        <div className=\"table-container\">\n          <table className=\"dashboard-table\">\n            <thead>\n              <tr>\n                <th>Bus</th>\n                <th>Speed</th>\n                <th>Distance</th>\n                <th>Status</th>\n                <th>Passengers</th>\n                <th>Next Stop</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.keys(buses).length === 0 ? (\n                <tr>\n                  <td colSpan=\"6\" className=\"loading-cell\">\n                    {isConnected ? \"Waiting for bus data...\" : \"Connecting to server...\"}\n                  </td>\n                </tr>\n              ) : (\n                Object.keys(buses).map((busId) => {\n                  const bus = buses[busId]\n                  return (\n                    <tr key={busId} onClick={() => handleBusClick(busId)} className=\"clickable-row\">\n                      <td>\n                        <div className=\"bus-info\">\n                          <div\n                            className=\"bus-color-indicator\"\n                            style={{ backgroundColor: bus.color || getColorForBus(bus.id) }}\n                          />\n                          <span className=\"color-bullet\">{bus.colorBullet || \"🚌\"}</span>\n                          <span className=\"bus-name\">{bus.name || `Bus ${bus.id}`}</span>\n                        </div>\n                      </td>\n                      <td className=\"speed-cell\">{bus.speed || 0} km/h</td>\n                      <td className=\"distance-cell\">{(bus.distance || 0).toFixed(1)} km</td>\n                      <td>\n                        <span className={`status ${bus.status || \"unknown\"}`}>{bus.status || \"unknown\"}</span>\n                      </td>\n                      <td className=\"passenger-cell\">\n                        {bus.passengers || 0}\n                        <span className=\"capacity\">/{bus.capacity || 50}</span>\n                      </td>\n                      <td className=\"next-stop-cell\">\n                        {bus.distanceToNextStop\n                          ? bus.distanceToNextStop < 1000\n                            ? `${bus.distanceToNextStop}m`\n                            : `${(bus.distanceToNextStop / 1000).toFixed(1)}km`\n                          : \"N/A\"}\n                      </td>\n                    </tr>\n                  )\n                })\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Chart - Distance vs Time for all buses */}\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <h3>📈 Live Distance Tracking</h3>\n          <span className=\"chart-info\">{timeLabels.current.length} data points</span>\n        </div>\n        <div className=\"chart-container\">\n          <canvas ref={chartRef}></canvas>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}